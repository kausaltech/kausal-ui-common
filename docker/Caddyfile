{
	admin off
	http_port {$CADDY_PORT}
	auto_https off
	servers {
		protocols h1 h2c
		trusted_proxies static private_ranges
		client_ip_headers X-Forwarded-For X-Real-IP
	}
	log {
		format json {
			time_format iso8601
		}
		output stderr
		exclude admin tls
	}
	metrics
	persist_config off
}

(cors) {
	@cors_preflight method OPTIONS
	@cors {
		header Origin *
	}
	handle @cors_preflight {
		header {
			Access-Control-Allow-Origin *
			Access-Control-Allow-Methods "GET, HEAD, OPTIONS"
			Access-Control-Allow-Headers *
			defer
		}
		respond "" 204
	}

	handle @cors {
		header {
			Access-Control-Allow-Origin *
			Access-Control-Allow-Headers *
			Access-Control-Expose-Headers *
			defer
		}
	}
}

http://:{$CADDY_PORT}

log {
	format json
	output stdout
}

encode zstd gzip

route /metrics {
	@denied not remote_ip private_ranges
	abort @denied
	metrics
}

route /_caddyhealth {
	log_skip
	respond "OK" 200
}

route /_next/static/* {
	uri strip_prefix /_next/static
	root * ./.next/static
	import cors
	header Cache-Control public,max-age=7200,must-revalidate
	file_server
}

route /static/* {
	uri strip_prefix /static
	root * /app/public/static
	import cors
	header Cache-Control public,max-age=31536000,immutable
	file_server
}

reverse_proxy localhost:{$NEXTJS_PORT} {
	# Disable buffering
	flush_interval -1
}
